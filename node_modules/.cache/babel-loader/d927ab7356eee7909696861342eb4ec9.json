{"ast":null,"code":"var _jsxFileName = \"/home/tuananh/try_hard/project/vscode_workspace/react-movie/src/components/movie-list/MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\nimport Button from '../button/Button';\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\nimport MovieCard from '../movie-card/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieList = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            window.console.log(JSON.stringify(response.data));\n            break;\n\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n\n      setItems(response.results);\n    };\n\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/tuananh/try_hard/project/vscode_workspace/react-movie/src/components/movie-list/MovieList.jsx"],"names":["React","useState","useEffect","PropTypes","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","MovieCard","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","window","console","log","JSON","stringify","data","getTvList","similar","id","results","map","item","i","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,mBAAP;AAEA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,cAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,OAAP,IAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,OAAO,GAAG,YAAY;AACxB,UAAIC,QAAQ,GAAG,IAAf;AACA,YAAMC,MAAM,GAAG,EAAf;;AAEA,UAAIL,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AAC1B,gBAAON,KAAK,CAACJ,QAAb;AACI,eAAKA,QAAQ,CAACW,KAAd;AACIH,YAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACa,aAAR,CAAsBR,KAAK,CAACM,IAA5B,EAAkC;AAACD,cAAAA;AAAD,aAAlC,CAAjB;AACAI,YAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBC,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACU,IAAxB,CAAnB;AACA;;AACJ;AACIV,YAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACoB,SAAR,CAAkBf,KAAK,CAACM,IAAxB,EAA8B;AAACD,cAAAA;AAAD,aAA9B,CAAjB;AANR;AAQH,OATD,MASO;AACHD,QAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACqB,OAAR,CAAgBhB,KAAK,CAACJ,QAAtB,EAAgCI,KAAK,CAACiB,EAAtC,CAAjB;AACH;;AACDf,MAAAA,QAAQ,CAACE,QAAQ,CAACc,OAAV,CAAR;AACH,KAjBD;;AAkBAf,IAAAA,OAAO;AACV,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,UAAU,EAAE,IADhB;AAEI,MAAA,YAAY,EAAE,EAFlB;AAGI,MAAA,aAAa,EAAE,MAHnB;AAAA,gBAMQF,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACN,QAAC,WAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAED,IAAjB;AAAuB,UAAA,QAAQ,EAAEpB,KAAK,CAACJ;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkByB,CAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3CD;;GAAMtB,S;;KAAAA,S;AA6CNA,SAAS,CAACuB,SAAV,GAAsB;AAClB1B,EAAAA,QAAQ,EAAEN,SAAS,CAACiC,MAAV,CAAiBC,UADT;AAElBlB,EAAAA,IAAI,EAAEhB,SAAS,CAACiC,MAAV,CAAiBC;AAFL,CAAtB;AAKA,eAAezB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        window.console.log(JSON.stringify(response.data))\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}